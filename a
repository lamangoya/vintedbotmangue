import requests
import time
import json
import os

# --- CONFIGURATION ---
BRANDS = [
    "GÃ©rard Darel 24h",
    "ChloÃ© Paddington"
]
MAX_PRICE = 120
ITEM_STATE = "very_good"  # possible: new, very_good, good, satisfactory, poor
CHECK_INTERVAL = 600  # 10 minutes = 600s

# --- TELEGRAM CONFIG ---
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

# --- SAUVEGARDE DES ANNONCES DÃ‰JÃ€ VUES ---
SEEN_FILE = "seen_items.json"
if os.path.exists(SEEN_FILE):
    with open(SEEN_FILE, "r") as f:
        seen_items = json.load(f)
else:
    seen_items = []

def send_telegram_message(text):
    """Envoie un message sur Telegram."""
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
    requests.post(url, data=payload)

def search_vinted(query):
    """Effectue une recherche sur Vinted via l'API publique."""
    url = "https://www.vinted.fr/api/v2/catalog/items"
    params = {
        "search_text": query,
        "price_to": MAX_PRICE,
        "status_ids": "2",  # TrÃ¨s bon Ã©tat
        "order": "newest_first",
        "per_page": 10,
    }
    response = requests.get(url, params=params)
    data = response.json()
    return data.get("items", [])

def check_new_items():
    """Cherche les nouvelles annonces et envoie des alertes."""
    global seen_items
    for brand in BRANDS:
        items = search_vinted(brand)
        for item in items:
            if item["id"] not in seen_items:
                seen_items.append(item["id"])
                link = f'https://www.vinted.fr/items/{item["id"]}'
                price = item["price"]
                title = item["title"]
                msg = f"ðŸ‘œ Nouvelle annonce trouvÃ©e !\n\n{title}\nPrix : {price} â‚¬\n{link}"
                send_telegram_message(msg)
    # Sauvegarde la liste
    with open(SEEN_FILE, "w") as f:
        json.dump(seen_items, f)
